@model PackageListViewModel
@{
    ViewBag.Title = string.IsNullOrWhiteSpace(Model.SearchTerm) ? "Packages" : "Packages matching " + Model.SearchTerm;
    ViewBag.Tab = "Packages";
    var moderationQueue = !string.IsNullOrWhiteSpace(Model.ModeratorQueue) && Model.ModeratorQueue.Equals(bool.TrueString, StringComparison.InvariantCultureIgnoreCase);
    var moderationCount = Model.ModerationUpdatedPackageCount + Model.ModerationSubmittedPackageCount + Model.ModerationWaitingPackageCount + Model.ModerationRespondedPackageCount;
    var unreviewedCount = Model.TotalCount - moderationCount;

    var moderationRole = User != null && User.IsInAnyModerationRole();
    Bundles.Reference("Scripts/closeable");
}

@*

    //todo NEWSITE finish search box integration
    <div id="searchBox" role="search">
      <form action="@Url.PackageList()" method="get">
        <input name="q" id="searchBoxInput" title="Search by id only with 'id:searchValue'. Search by tags with 'tag:searchValue'." placeholder="Search Packages" value="@(String.IsNullOrEmpty(ViewBag.SearchTerm) ? "" : ViewBag.SearchTerm)" autofocus />
        <input id="searchBoxSubmit" title="Search by id only with 'id:searchValue'. Search by tags with 'tag:searchValue'." type="submit" value=" " />
      </form>
    </div>

*@


  @if (!User.Identity.IsAuthenticated)
  {
      <div class="p">
        <div class="block full-width m-t p-b clearfix p">
          @* <div class="m-b h3">
            <div class="package-search m-r border-radius">
                <form class="p full-width" action="@Url.PackageList()" method="get">
                    <input name="q" id="search" type="search" class="p full-width" title="Search by id only with 'id:searchValue'. Search by tags with 'tag:searchValue'." placeholder="Search community packages..." value="@(String.IsNullOrEmpty(ViewBag.SearchTerm) ? "" : ViewBag.SearchTerm)" />
                    <input id="searchBoxSubmit" title="Search by id only with 'id:searchValue'. Search by tags with 'tag:searchValue'." type="submit" value=" " />
                </form>
            </div>
        </div>*@
        <div>
          <p class="no-margin">
            Your use of the packages on this site means you understand they are not supported or guaranteed in any way. Due to the nature of a public repository and unreliability due to distribution rights, these packages should not be used as is for organizational purposes either. <a href="@Url.RouteUrl(RouteName.Docs, new {docName="community-package-disclaimer"})">Learn more</a>.
          </p>
        </div>
          @Html.Partial("~/Views/Packages/_CommunityInfoDisclaimer.cshtml")
        </div>
      </div>
  }

<div class="hgroup search">
    <div style="float:right">
        <a href="https://feeds.feedburner.com/chocolatey" title="Subscribe to package updates" rel="alternate" type="application/rss+xml"><img src="https://www.feedburner.com/fb/images/pub/feed-icon32x32.png" alt="RSS" style="border:0" />&nbsp;<span>Subscribe to updates</span></a>
        <br />
        <form style="border:0px solid #ccc;padding:1px;text-align:center;" action="https://feedburner.google.com/fb/a/mailverify" method="post" target="popupwindow" onsubmit="window.open('https://feedburner.google.com/fb/a/mailverify?uri=chocolatey', 'popupwindow', 'scrollbars=yes,width=550,height=520');return true"><input type="hidden" value="chocolatey" name="uri" /><input type="hidden" name="loc" value="en_US" />Or subcribe by <input type="submit" value="email" /></form>
    </div>
    @if (!String.IsNullOrEmpty(Model.SearchTerm))
    {
        <h1>
            Search for "@Model.SearchTerm" returned @Model.TotalCount @if (Model.TotalCount == 1)
            { <text>package</text> }
            else
            { <text>packages</text> }
        </h1>
    }
    else
    {
        if (moderationQueue)
        {
            <h1>
                @if (Model.TotalCount == 1)
            { <text>There is @moderationCount package in moderation</text> }
            else
            { <text>There are @moderationCount packages in moderation</text> }
            </h1>
            <h2>@Model.ModerationUpdatedPackageCount Updated | @Model.ModerationRespondedPackageCount Responded | @Model.ModerationSubmittedPackageCount Submitted | @Model.ModerationWaitingPackageCount Waiting for Maintainer | @unreviewedCount Unreviewed</h2>
        }
        else
        {
            <h1>
                @if (Model.TotalCount == 1)
            { <text>There is @Model.TotalCount community maintained package</text> }
            else
            { <text>There are @Model.TotalCount community maintained packages</text> }
            </h1>
        }

    }
    @if (@Model.LastResultIndex > 0)
    {
        <h2>Displaying results @Model.FirstResultIndex - @Model.LastResultIndex.</h2>
    }
</div>
<form method="get" action="">
    <fieldset class="form search">
        <legend>Sort Order</legend>
        <input type="hidden" name="q" value="@Model.SearchTerm" />
        <div class="form-field">
            <select name="moderatorQueue" id="moderatorQueue">
                @ViewHelpers.Option("", "Normal View", Model.ModeratorQueue)
                @ViewHelpers.Option("true", "Moderator Queue", Model.ModeratorQueue)
            </select>

            <select name="prerelease" id="prerelease">
                @ViewHelpers.Option("false", "Stable Only", Model.IncludePrerelease)
                @ViewHelpers.Option("true", "Include Prerelease", Model.IncludePrerelease)
            </select>

            <label for="sortOrder">Sort By</label>
            <select name="sortOrder" id="sortOrder">
                @if (!Model.SearchTerm.IsEmpty())
                {
                    @ViewHelpers.Option(Constants.RelevanceSortOrder, "Relevance", Model.SortOrder)
                }
                @ViewHelpers.Option(Constants.PopularitySortOrder, "Popularity", Model.SortOrder)
                @ViewHelpers.Option(Constants.AlphabeticSortOrder, "A-Z", Model.SortOrder)
                @ViewHelpers.Option(Constants.RecentSortOrder, "Recent", Model.SortOrder)
            </select>
        </div>
    </fieldset>
</form>
<ol id="searchResults">
    @foreach (var package in Model.Items)
    {
        <li>
            @Html.Partial(MVC.Packages.Views._ListPackage, package)
        </li>
    }
</ol>

@ViewHelpers.PreviousNextPager(Model.Pager)
</div>

@section BottomScripts {
    <script>
        $(function () {
            $("#sortOrder,#prerelease,#moderatorQueue").change(function () {
                $(this).closest("form").submit();
            });

            Closeable.modal("chocolatey_hide_packages_disclaimer");
            if (!getCookie('chocolatey_hide_packages_disclaimer')) {
              $(".modal-closeable").css('display', 'block');
            }
        });
     </script>
}
